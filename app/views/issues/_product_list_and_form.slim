ruby:
  @products = Product.where(issue_id: issue.id)

- if @products
  div class="contextual"
    = link_to l("products.new"), new_product_path, class: "icon icon-add new-issue"

  h2 = l('products.title')

  div class="autoscroll"
    table class="list"
      thead
        tr
          th class="id"
            = products_link_to_sort(:id, "#")
          th class="name"
            = products_link_to_sort(:name)
          th class="price"
            = products_link_to_sort(:price)
          th class="number"
            = products_link_to_sort(:number_count)
          th class="priority"
            = products_link_to_sort(:production_date)
          th class="issue_id"
            = products_link_to_sort(:issue_id)

      tbody
        - @products.each_with_index do |product, index|
          tr class="#{ ('product-list-odd' if index.even?) }"
            td
              = product.id
            td
              = link_to product.name, product
            td
              = product.price
            td
              = product.number_count
            td
              = time_ago_in_words product.production_date
            td
              = product.issue_id


h3
  = l('products.new')

= form_for(product = Product.new, local: true, html: { is_issue_form: true }) do |form|
  - if product.errors.any?
    div id="error_explanation"
      h2
        = pluralize(product.errors.count, "error")
        |prohibited this product from being saved:

      ul
        - product.errors.full_messages.each do |message|
          li= message

  = form.hidden_field :issue_id, value: issue.id

  div class="box tabular"
    div id="all_attributes"
      p
        = form.label l(:name)
        span class="required" *
        '
        = form.text_field :name, size: "80", maxlength: "255", required: true

      p
        = form.label l(:price)
        span class="required" *
        '
        = form.text_field :price, size: "10", maxlength: "10", required: true

      p
        = form.label l(:number_count)
        span class="required" *
        '
        = form.text_field :number_count, size: "10", maxlength: "10", required: true


  = form.submit l('products.create')